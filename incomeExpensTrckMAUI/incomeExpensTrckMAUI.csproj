<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net7.0-android;net7.0-ios</TargetFrameworks>
		<!--<targetframeworks condition="$([msbuild]::isosplatform('windows'))">$(targetframeworks);net7.0-windows10.0.19041.0</targetframeworks>-->
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
		<OutputType>Exe</OutputType>
		<RootNamespace>incomeExpensTrckMAUI</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>

		<!-- Display name -->
		<ApplicationTitle>incomeExpensTrckMAUI</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.incomeexpenstrckmaui</ApplicationId>
		<ApplicationIdGuid>ca25bcdf-dffe-4009-a7e9-076268e1b0e0</ApplicationIdGuid>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
	</PropertyGroup>

<!-- This PropertyGroup defines specific configuration settings for the Debug build when targeting the net7.0-ios platform with AnyCPU. -->
	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-ios|AnyCPU'">
	  <MtouchLink>SdkOnly</MtouchLink>
	  <MtouchUseLlvm>True</MtouchUseLlvm>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Maui" Version="6.1.0" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="7.0.0" /> 
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.2" />
		<PackageReference Include="Realm" Version="11.7.0" />
		<PackageReference Include="Refractored.MvvmHelpers" Version="1.6.2" />
	</ItemGroup>

	<!-- 
	Mac Catalyst 
	Don't compile C# code whose filename ends with .MacCatalyst.cs, 
	or that's located in the MacCatalyst folder 
	or sub-folder of the MacCatalyst folder, if you aren't building for Mac Catalyst.
	-->
	<ItemGroup Condition="$(TargetFramework.StartsWith('net8.0-maccatalyst')) != true">
		<Compile Remove="**\*.MacCatalyst.cs" />
		<None Include="**\*.MacCatalyst.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
		<Compile Remove="**\MacCatalyst\**\*.cs" />
		<None Include="**\MacCatalyst\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
	</ItemGroup>

	<!-- 
	Windows 
	Don't compile C# code whose filename ends with .Windows.cs, 
	or that's located in the Windows folder 
	or sub-folder of the Windows folder, if you aren't building for Windows.
	-->
	<ItemGroup Condition="$(TargetFramework.Contains('-windows')) != true">
		<Compile Remove="**\*.Windows.cs" />
		<None Include="**\*.Windows.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
		<Compile Remove="**\Windows\**\*.cs" />
		<None Include="**\Windows\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
	</ItemGroup>
	<ItemGroup>
	  <Compile Update="Views\Pages\ExpensePages\Styles\ExpensePageStyles.xaml.cs">
	    <DependentUpon>ExpensePageStyles.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="Views\Pages\ExpensePages\ExpensePageView.xaml.cs">
	    <DependentUpon>ExpensePageView.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="Views\Pages\MainPages\MainPageView.xaml.cs">
	    <DependentUpon>MainPageView.xaml</DependentUpon>
	  </Compile>
	</ItemGroup>
	<ItemGroup>
	  <MauiXaml Update="Views\Pages\ExpensePages\AddExpensePageView.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Views\Pages\ExpensePages\ExpenseDetailPageView.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Views\Pages\ExpensePages\ExpensePageView.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Views\Pages\ExpensePages\Styles\AddExpensePageStyles.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Views\Pages\ExpensePages\Styles\ExpensePageStyles.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Views\Pages\MainPages\Styles\MainPageStyles.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>
	<ItemGroup>
	  <Folder Include="Views\Pages\IncomePages\" />
	</ItemGroup>
	<ProjectExtensions><VisualStudio><UserProperties XamarinHotReloadUnhandledDeviceExceptionincomeExpensTrckMAUIHideInfoBar="True" /></VisualStudio></ProjectExtensions>

</Project>
